{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <h1 class="report-title">Reports</h1>
    
    <nav class="report-navigation">
        <ul>
            <li><a href="#kmom01">Kmom01</a></li>
            <li><a href="#kmom02">Kmom02</a></li>
            <li><a href="#kmom03">Kmom03</a></li>
        </ul>
    </nav>

<section class="report-section" id="kmom01">
    <h2>Kmom01</h2>
    <p>Mina tidigare erfarenheter med objektorientering kommer främst från studier och projekt i Java och C++, där jag lärt mig grunderna som klasser, objekt, arv och polymorfism. PHP:s objektorienterade modell känns bekant, med dess stöd för klasser, objekt, konstruktorer, och synlighet (public, private, protected).</p>
    <p>PHP:s modell för klasser och objekt är kraftfull, med stöd för egenskaper, metoder, arv och gränssnitt. För att börja skapa klasser i PHP behöver man förstå klassdefinitioner, objektinstansiering, och grundläggande principer för inkapsling.</p>
    <p>Arbetet med uppgiften "me/report" har varit en bra praktik i att använda Symfony's MVC-struktur. Kodbasen och strukturen känns organiserad, där kontrollerare och routes spelar en central roll. Det var intressant att se hur enkelt det är att definiera routes och returnera olika typer av svar.</p>
    <p>Från "PHP The Right Way" finner jag avsnitten om moderna PHP-praktiker och säkerhet särskilt värdefulla. Jag är nyfiken på att lära mig mer om komponeringsverktyg och pakethantering med Composer, samt säkerhetsaspekter som kryptering och användarautentisering.</p>
    <p> 
    TIL för denna kmom har varit att sätta upp kontrollers, inse hur enkelt det är.
    </p>
</section>


    <section class="report-section" id="kmom02">
        <h2>Kmom02</h2>
        <p>Your text for Kmom02...</p>
    </section>

    <section class="report-section" id="kmom03">
        <h2>Kmom03</h2>
        <p>Your text for Kmom03...</p>
    </section>

{% endblock %}
